{
  "version": 3,
  "file": "install-app-deps.js",
  "sourceRoot": "",
  "sources": [
    "../src/install-app-deps.ts"
  ],
  "names": [],
  "mappings": ";;;AAEA,uBAA2G,AAAQ,AACnH,AAAC;AAAD,0BAAkC,AAAW,AAC7C,AAAC;AAAD,MAAY,AAAI,eAAM,AAAM,AAC5B,AAAC;AAAD,MAAO,AAAG,cAAW,AAAmB,AAAC;AAEzC,MAAM,AAAI,kBAAiB,WAAC,AAAM,OAAC;AACjC,AAAI,UAAE,AAAM;AACZ,AAAI,UAAE,AAAM,AACb,AAAC,AAAC;CAHc,CAAJ,AAAG,EAGZ,AAAK,AAAE;AAEX,MAAM,AAAc,iBAAG,AAAI,KAAC,AAAI,KAAC,AAAO,QAAC,AAAG,AAAE,OAAE,AAAc,AAAC;AAC/D,MAAM,AAAM,SAAG,AAAI,KAAC,AAAM,UAAI,OAAoB;AAElD,OAAe,gBAAC,AAAc,AAAC,gBAC5B,AAAI,KAAC,AAAE,MAAI,OAAmB,oBAAC,AAAI,KAAC,AAAI,KAAC,AAAO,QAAC,AAAG,AAAE,OAAE,AAAM,AAAC,SAAE,OAAkB,mBAAC,AAAE,IAAE,AAAc,AAAC,iBAAE,AAAI,KAAC,AAAI,AAAC,AAAC,OACpH,AAAK,MAAC,UAAiB,AAAC",
  "sourcesContent": [
    "#! /usr/bin/env node\n\nimport { DEFAULT_APP_DIR_NAME, installDependencies, commonArgs, getElectronVersion, readPackageJson } from \"./util\"\nimport { printErrorAndExit } from \"./promise\"\nimport * as path from \"path\"\nimport cla = require(\"command-line-args\")\n\nconst args = cla(commonArgs.concat({\n  name: \"arch\",\n  type: String,\n})).parse()\n\nconst devPackageFile = path.join(process.cwd(), \"package.json\")\nconst appDir = args.appDir || DEFAULT_APP_DIR_NAME\n\nreadPackageJson(devPackageFile)\n  .then(it => installDependencies(path.join(process.cwd(), appDir), getElectronVersion(it, devPackageFile), args.arch))\n  .catch(printErrorAndExit)"
  ]
}
